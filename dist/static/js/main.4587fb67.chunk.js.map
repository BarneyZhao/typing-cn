{"version":3,"sources":["utils/storage.ts","store/reducers/root.ts","store/config.ts","store/index.ts","words.ts","views/home/Home.tsx","router/routes.ts","router/index.tsx","utils/pinyin.ts","themes/default.ts","themes/index.ts","themes/carbon.ts","themes/olivia.ts","themes/9009.ts","themes/oblivion.ts","themes/godspeed.ts","themes/nautilus.ts","themes/avocado.ts","themes/2600.ts","themes/konmomo.ts","components/header/Header.tsx","App.tsx","index.tsx"],"names":["storage","session","get","key","dataStr","window","sessionStorage","getItem","JSON","parse","set","data","stringify","setItem","remove","removeItem","local","localStorage","state","uiScale","uiTheme","wordsMode","countdownTime","customerWords","reducer","setUiScale","payload","setUiTheme","setWordsMode","setCountdownTime","saveCustomerWords","reducersObj","root","initState","action","type","Object","assign","reducerCaller","mapStateToProps","$state","mapDispatchToProps","dispatch","$dispatch","storeConnect","component","connect","createStore","combineReducers","defaultWords","label","text","Countdown","Statistic","getWords","mode","propWords","length","WORDS","getCountdownStr","value","minutes","Math","floor","secs","routes","path","props","useState","loading","setLoading","deadline","setDeadline","actingWordIndex","setActingWordIndex","wordArr","setWordArr","wordInput","setWordInput","typingEnd","setTypingEnd","wordsBaseRef","useRef","mainWindowEl","mainInputEl","wordIndexRef","lineIndexLockRef","nextLineStartIndexRef","lineCountRef","timeStartRef","oneLineHeightRef","keystrokeCountRef","countdownTimeRef","parseInt","current","deadlineText","setDeadlineText","pushWordToArr","isInit","arr","wordsTemp","isCorrect","concat","checkInputVal","inputArr","target","forEach","char","index","charAt","reloadBtn","useCallback","i","rIndex","random","temp","shuffle","setTimeout","focus","useEffect","wordContainerRow","lastElementChild","outterScrollTop","scrollTop","Array","from","children","child","offsetHeight","childTopToParent","offsetTop","showsSecLine","isNextLineCheck","time","Date","now","countDownStart","trim","tempArr","targetWord","className","justify","align","flex","spinning","delay","wrapperClassName","ref","gutter","map","item","onChange","evt","onKeyUp","keyCode","content","defaultValue","test","String","onVisibleChange","overlayClassName","placement","title","trigger","format","onFinish","console","log","onClick","icon","ReloadOutlined","span","round","filter","word","exact","router","routeProps","basename","process","header","mainClass","fallback","route","render","React","createElement","j","match","url","footer","pinyin","require","getPinyin","removeSpace","removeTone","name","textColor","changeColor","themeObj","less","refresh","then","modifyVars","def","reg","defaultWordStr","join","settingModalVisible","setSettingModalVisible","themeModalVisible","setThemeModalVisible","defaultWordsRef","words","setWords","errorWordList","setErrorWordList","hash","useLocation","themeList","find","th","slice","replace","ghost","SettingOutlined","AppstoreOutlined","Group","visible","closable","maskClosable","inputWordList","Set","split","Boolean","errorList","push","actWordList","timeEnd","defaultActiveKey","activeKey","TabPane","tab","TextArea","autoSize","minRows","maxRows","disabled","err","onCancel","theme","style","backgroundColor","color","location","themeBlockClick","App","store","ReactDOM","document","getElementById"],"mappings":"sWAuCeA,EA7BU,CACrBC,QAAS,CACLC,IAAK,SAACC,GACF,IAAMC,EAAUC,OAAOC,eAAeC,QAAQJ,GAC9C,OAAOC,GAAWI,KAAKC,MAAML,IAEjCM,IAAK,SAACP,EAAaQ,GACf,IAAMP,EAAUI,KAAKI,UAAUD,GAC/BN,OAAOC,eAAeO,QAAQV,EAAKC,IAEvCU,OAAQ,SAACX,GACLE,OAAOC,eAAeS,WAAWZ,KAGzCa,MAAO,CACHd,IAAK,SAACC,GACF,IAAMC,EAAUC,OAAOY,aAAaV,QAAQJ,GAC5C,OAAOC,GAAWI,KAAKC,MAAML,IAEjCM,IAAK,SAACP,EAAaQ,GACf,IAAMP,EAAUI,KAAKI,UAAUD,GAC/BN,OAAOY,aAAaJ,QAAQV,EAAKC,IAErCU,OAAQ,SAACX,GACLE,OAAOY,aAAaF,WAAWZ,MCO5B,GACXe,MAjCW,CACXC,QAASnB,EAAQgB,MAAMd,IAPV,aAOmC,IAChDkB,QAASpB,EAAQgB,MAAMd,IAPV,aAOmC,GAChDmB,UAAWrB,EAAQgB,MAAMd,IAPV,eAOqC,IACpDoB,cAAetB,EAAQgB,MAAMd,IAPV,mBAOyC,KAC5DqB,cAAevB,EAAQgB,MAAMd,IAPV,mBAOyC,IA6B5DsB,QAzBY,CACZC,WAAY,SAACP,EAAcQ,GAEvB,OADA1B,EAAQgB,MAAMN,IAjBL,WAiBmBgB,GACrB,CAAEP,QAASO,IAEtBC,WAAY,SAACT,EAAcQ,GAEvB,OADA1B,EAAQgB,MAAMN,IApBL,WAoBmBgB,GACrB,CAAEN,QAASM,IAEtBE,aAAc,SAACV,EAAcQ,GAEzB,OADA1B,EAAQgB,MAAMN,IAvBH,aAuBmBgB,GACvB,CAAEL,UAAWK,IAExBG,iBAAkB,SAACX,EAAcQ,GAE7B,OADA1B,EAAQgB,MAAMN,IA1BC,iBA0BmBgB,GAC3B,CAAEJ,cAAeI,IAE5BI,kBAAmB,SAACZ,EAAcQ,GAE9B,OADA1B,EAAQgB,MAAMN,IA7BC,iBA6BmBgB,GAC3B,CAAEH,cAAeG,MCxBnBK,EAET,CACAC,KAdkB,SAACR,EAAcS,GACjC,OAAO,WAAgE,IAA/Df,EAA8D,uDAAtDe,EAAWC,EAA2C,uCAClE,OAAKV,EAAQU,EAAOC,MACbC,OAAOC,OAAO,GAAInB,EAAOM,EAAQU,EAAOC,MAAMjB,EAAOgB,EAAOR,UADjCR,GAYhCoB,CAAcN,EAAKR,QAASQ,EAAKd,QCXrCqB,EAAkB,SAACrB,GACrB,MAAO,CAAEsB,OAAO,eAAMtB,KAEpBuB,EAAqB,SAACC,GACxB,MAAO,CACHC,UADG,SACOR,EAAMT,GACZgB,EAAS,CAAEP,OAAMT,aAErBgB,aASD,SAASE,EAAaC,GACzB,OAAOC,YAAQP,EAAiBE,EAAzBK,CAA6CD,GAIzCE,kBAAYC,YAAgBjB,ICyf5BkB,EA/gBc,CACzB,CACIC,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,qBACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,qBACPC,KAAM,cAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,qBACPC,KAAM,gBAEV,CACID,MAAO,qBACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,qBACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,qBACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,aAEV,CACID,MAAO,qBACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,qBACPC,KAAM,eAEV,CACID,MAAO,qBACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,qBACPC,KAAM,cAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,qBACPC,KAAM,cAEV,CACID,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,qBACPC,KAAM,cAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,QAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,qBACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,qBACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,UAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAAM,YAEV,CACID,MAAO,eACPC,KAA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","file":"static/js/main.4587fb67.chunk.js","sourcesContent":["interface StorageFuncs {\n    get<T>(key: string): T;\n    set(key: string, data: any): void;\n    remove(key: string): void;\n}\nexport interface Storage {\n    session: StorageFuncs;\n    local: StorageFuncs;\n}\n\nconst storage: Storage = {\n    session: {\n        get: (key: string) => {\n            const dataStr = window.sessionStorage.getItem(key);\n            return dataStr && JSON.parse(dataStr);\n        },\n        set: (key: string, data: any) => {\n            const dataStr = JSON.stringify(data);\n            window.sessionStorage.setItem(key, dataStr);\n        },\n        remove: (key: string) => {\n            window.sessionStorage.removeItem(key);\n        },\n    },\n    local: {\n        get: (key: string) => {\n            const dataStr = window.localStorage.getItem(key);\n            return dataStr && JSON.parse(dataStr);\n        },\n        set: (key: string, data: any) => {\n            const dataStr = JSON.stringify(data);\n            window.localStorage.setItem(key, dataStr);\n        },\n        remove: (key: string) => {\n            window.localStorage.removeItem(key);\n        },\n    },\n};\n\nexport default storage;\n","import { Word } from '@/words';\nimport storage from '@/utils/storage';\n\nconst UI_SCALE = 'UI_SCALE';\nconst UI_THEME = 'UI_THEME';\nconst WORDS_MODE = 'WORDS_MODE';\nconst COUNTDOWN_TIME = 'COUNTDOWN_TIME';\nconst CUSTOMER_WORDS = 'CUSTOMER_WORDS';\n\nconst _state = {\n    uiScale: storage.local.get<string>(UI_SCALE) || 's',\n    uiTheme: storage.local.get<string>(UI_THEME) || '',\n    wordsMode: storage.local.get<string>(WORDS_MODE) || '1',\n    countdownTime: storage.local.get<string>(COUNTDOWN_TIME) || '60',\n    customerWords: storage.local.get<Word[]>(CUSTOMER_WORDS) || [],\n};\ntype State = typeof _state;\n\nconst reducer = {\n    setUiScale: (state: State, payload: State['uiScale']): Partial<State> => {\n        storage.local.set(UI_SCALE, payload);\n        return { uiScale: payload };\n    },\n    setUiTheme: (state: State, payload: State['uiScale']): Partial<State> => {\n        storage.local.set(UI_THEME, payload);\n        return { uiTheme: payload };\n    },\n    setWordsMode: (state: State, payload: State['wordsMode']): Partial<State> => {\n        storage.local.set(WORDS_MODE, payload);\n        return { wordsMode: payload };\n    },\n    setCountdownTime: (state: State, payload: State['countdownTime']): Partial<State> => {\n        storage.local.set(COUNTDOWN_TIME, payload);\n        return { countdownTime: payload };\n    },\n    saveCustomerWords: (state: State, payload: State['customerWords']): Partial<State> => {\n        storage.local.set(CUSTOMER_WORDS, payload);\n        return { customerWords: payload };\n    },\n};\n\nexport default {\n    state: _state,\n    reducer,\n};\n","import root from './reducers/root'; // +\n\nconst reducerCaller = (reducer: any, initState: any) => {\n    return (state = initState, action: { type: string; payload: any }) => {\n        if (!reducer[action.type]) return state;\n        return Object.assign({}, state, reducer[action.type](state, action.payload));\n    };\n};\n\nexport type State = {\n    root: typeof root.state; // +\n};\n\nexport const reducersObj: {\n    [P in keyof State]: ReturnType<typeof reducerCaller>;\n} = {\n    root: reducerCaller(root.reducer, root.state), // +\n};\n\nexport type ReducersFuncs = typeof root.reducer; // +\n","import { createStore, combineReducers } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { reducersObj, State, ReducersFuncs } from './config';\n\nconst mapStateToProps = (state: State) => {\n    return { $state: { ...state } };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        $dispatch(type, payload) {\n            dispatch({ type, payload });\n        },\n        dispatch,\n    } as {\n        $dispatch: <T extends keyof ReducersFuncs>(\n            type: T,\n            payload?: Parameters<ReducersFuncs[T]>[1]\n        ) => void;\n        dispatch: any;\n    };\n};\nexport function storeConnect(component: any) {\n    return connect(mapStateToProps, mapDispatchToProps)(component);\n}\nexport type MapState = ReturnType<typeof mapStateToProps>;\nexport type MapDispatch = ReturnType<typeof mapDispatchToProps>;\nexport default createStore(combineReducers(reducersObj));\n","// auto generate\nexport interface Word {\n    label: string;\n    text: string;\n}\nconst defaultWords: Word[] = [\n    {\n        label: '邮件',\n        text: 'youjian',\n    },\n    {\n        label: '离开',\n        text: 'likai',\n    },\n    {\n        label: '准备',\n        text: 'zhunbei',\n    },\n    {\n        label: '庆祝',\n        text: 'qingzhu',\n    },\n    {\n        label: '宿舍',\n        text: 'sushe',\n    },\n    {\n        label: '注意',\n        text: 'zhuyi',\n    },\n    {\n        label: '非常',\n        text: 'feichang',\n    },\n    {\n        label: '家庭',\n        text: 'jiating',\n    },\n    {\n        label: '去年',\n        text: 'qunian',\n    },\n    {\n        label: '点心',\n        text: 'dianxin',\n    },\n    {\n        label: '上课',\n        text: 'shangke',\n    },\n    {\n        label: '美丽',\n        text: 'meili',\n    },\n    {\n        label: '德国',\n        text: 'deguo',\n    },\n    {\n        label: '一定',\n        text: 'yiding',\n    },\n    {\n        label: '着急',\n        text: 'zhaoji',\n    },\n    {\n        label: '铅笔',\n        text: 'qianbi',\n    },\n    {\n        label: '痛苦',\n        text: 'tongku',\n    },\n    {\n        label: '必须',\n        text: 'bixu',\n    },\n    {\n        label: '病人',\n        text: 'bingren',\n    },\n    {\n        label: '现在',\n        text: 'xianzai',\n    },\n    {\n        label: '牛奶',\n        text: 'niunai',\n    },\n    {\n        label: '月亮',\n        text: 'yueliang',\n    },\n    {\n        label: '早上',\n        text: 'zaoshang',\n    },\n    {\n        label: '简单',\n        text: 'jiandan',\n    },\n    {\n        label: '瓶子',\n        text: 'pingzi',\n    },\n    {\n        label: '哥哥',\n        text: 'gege',\n    },\n    {\n        label: '音乐',\n        text: 'yinyue',\n    },\n    {\n        label: '筷子',\n        text: 'kuaizi',\n    },\n    {\n        label: '还是',\n        text: 'haishi',\n    },\n    {\n        label: '桌子',\n        text: 'zhuozi',\n    },\n    {\n        label: '看见',\n        text: 'kanjian',\n    },\n    {\n        label: '一边',\n        text: 'yibian',\n    },\n    {\n        label: '大声',\n        text: 'dasheng',\n    },\n    {\n        label: '风景',\n        text: 'fengjing',\n    },\n    {\n        label: '餐厅',\n        text: 'canting',\n    },\n    {\n        label: '木头',\n        text: 'mutou',\n    },\n    {\n        label: '新年',\n        text: 'xinnian',\n    },\n    {\n        label: '嘴巴',\n        text: 'zuiba',\n    },\n    {\n        label: '应该',\n        text: 'yinggai',\n    },\n    {\n        label: '过来',\n        text: 'guolai',\n    },\n    {\n        label: '虾球',\n        text: 'xiaqiu',\n    },\n    {\n        label: '江湾',\n        text: 'jiangwan',\n    },\n    {\n        label: '江山',\n        text: 'jiangshan',\n    },\n    {\n        label: '富贵',\n        text: 'fugui',\n    },\n    {\n        label: '酸奶',\n        text: 'suannai',\n    },\n    {\n        label: '今天',\n        text: 'jintian',\n    },\n    {\n        label: '真好',\n        text: 'zhenhao',\n    },\n    {\n        label: '波波',\n        text: 'bobo',\n    },\n    {\n        label: '耳朵',\n        text: 'erduo',\n    },\n    {\n        label: '奥利奥',\n        text: 'aoliao',\n    },\n    {\n        label: '胖虎',\n        text: 'panghu',\n    },\n    {\n        label: '键盘',\n        text: 'jianpan',\n    },\n    {\n        label: '真实',\n        text: 'zhenshi',\n    },\n    {\n        label: '优联',\n        text: 'youlian',\n    },\n    {\n        label: '蓝牙',\n        text: 'lanya',\n    },\n    {\n        label: '无线',\n        text: 'wuxian',\n    },\n    {\n        label: '三明治',\n        text: 'sanmingzhi',\n    },\n    {\n        label: '胶条',\n        text: 'jiaotiao',\n    },\n    {\n        label: '星夜',\n        text: 'xingye',\n    },\n    {\n        label: '奶油',\n        text: 'naiyou',\n    },\n    {\n        label: '熊猫',\n        text: 'xiongmao',\n    },\n    {\n        label: '可乐',\n        text: 'kele',\n    },\n    {\n        label: '海外',\n        text: 'haiwai',\n    },\n    {\n        label: '浦杉',\n        text: 'pushan',\n    },\n    {\n        label: '矩阵',\n        text: 'juzhen',\n    },\n    {\n        label: '塑料',\n        text: 'suliao',\n    },\n    {\n        label: '大骨',\n        text: 'dagu',\n    },\n    {\n        label: '营地',\n        text: 'yingdi',\n    },\n    {\n        label: '葫芦',\n        text: 'hulu',\n    },\n    {\n        label: '天狼星',\n        text: 'tianlangxing',\n    },\n    {\n        label: '稻草人',\n        text: 'daocaoren',\n    },\n    {\n        label: '无限',\n        text: 'wuxian',\n    },\n    {\n        label: '虚拟',\n        text: 'xuni',\n    },\n    {\n        label: '电玩',\n        text: 'dianwan',\n    },\n    {\n        label: '徽章',\n        text: 'huizhang',\n    },\n    {\n        label: '北极圈',\n        text: 'beijiquan',\n    },\n    {\n        label: '仁王',\n        text: 'renwang',\n    },\n    {\n        label: '怪猎',\n        text: 'guailie',\n    },\n    {\n        label: '大佬',\n        text: 'dalao',\n    },\n    {\n        label: '开车',\n        text: 'kaiche',\n    },\n    {\n        label: '大雄',\n        text: 'daxiong',\n    },\n    {\n        label: '代组',\n        text: 'daizu',\n    },\n    {\n        label: '亚克力',\n        text: 'yakeli',\n    },\n    {\n        label: '黄铜',\n        text: 'huangtong',\n    },\n    {\n        label: '不锈钢',\n        text: 'buxiugang',\n    },\n    {\n        label: '铝锭',\n        text: 'lvding',\n    },\n    {\n        label: '注塑',\n        text: 'zhusu',\n    },\n    {\n        label: '成型',\n        text: 'chengxing',\n    },\n    {\n        label: '菠萝',\n        text: 'boluo',\n    },\n    {\n        label: '霓虹',\n        text: 'nihong',\n    },\n    {\n        label: '螺丝',\n        text: 'luosi',\n    },\n    {\n        label: '卫星轴',\n        text: 'weixingzhou',\n    },\n    {\n        label: '红白机',\n        text: 'hongbaiji',\n    },\n    {\n        label: '幻影',\n        text: 'huanying',\n    },\n    {\n        label: '日文',\n        text: 'riwen',\n    },\n    {\n        label: '俄文',\n        text: 'ewen',\n    },\n    {\n        label: '键帽',\n        text: 'jianmao',\n    },\n    {\n        label: '套件',\n        text: 'taojian',\n    },\n    {\n        label: '碳纤维',\n        text: 'tanxianwei',\n    },\n    {\n        label: '玻纤',\n        text: 'boxian',\n    },\n    {\n        label: '热升华',\n        text: 'reshenghua',\n    },\n    {\n        label: '头发',\n        text: 'toufa',\n    },\n    {\n        label: '客厅',\n        text: 'keting',\n    },\n    {\n        label: '游泳池',\n        text: 'youyongchi',\n    },\n    {\n        label: '周末',\n        text: 'zhoumo',\n    },\n    {\n        label: '弟弟',\n        text: 'didi',\n    },\n    {\n        label: '可爱',\n        text: 'keai',\n    },\n    {\n        label: '鹦鹉',\n        text: 'yingwu',\n    },\n    {\n        label: '漂白',\n        text: 'piaobai',\n    },\n    {\n        label: '电泳',\n        text: 'dianyong',\n    },\n    {\n        label: '武士道',\n        text: 'wushidao',\n    },\n    {\n        label: '码农',\n        text: 'manong',\n    },\n    {\n        label: '脉冲',\n        text: 'maichong',\n    },\n    {\n        label: '蒸汽波',\n        text: 'zhengqibo',\n    },\n    {\n        label: '青柠',\n        text: 'qingning',\n    },\n    {\n        label: '声波',\n        text: 'shengbo',\n    },\n    {\n        label: '橄榄',\n        text: 'ganlan',\n    },\n    {\n        label: '前锋',\n        text: 'qianfeng',\n    },\n    {\n        label: '深空',\n        text: 'shenkong',\n    },\n    {\n        label: '原点',\n        text: 'yuandian',\n    },\n    {\n        label: '樱花',\n        text: 'yinghua',\n    },\n    {\n        label: '原厂',\n        text: 'yuanchang',\n    },\n    {\n        label: '静电容',\n        text: 'jingdianrong',\n    },\n    {\n        label: '抛光',\n        text: 'paoguang',\n    },\n    {\n        label: '佳达隆',\n        text: 'jiadalong',\n    },\n    {\n        label: '宁芝',\n        text: 'ningzhi',\n    },\n    {\n        label: '北极星',\n        text: 'beijixing',\n    },\n    {\n        label: '退烧',\n        text: 'tuishao',\n    },\n    {\n        label: '吃瓜',\n        text: 'chigua',\n    },\n    {\n        label: '解毒',\n        text: 'jiedu',\n    },\n    {\n        label: '摸鱼',\n        text: 'moyu',\n    },\n];\n\nexport default defaultWords;\n","import { Input, Row, Col, Statistic, Button, Spin, Popover, InputNumber } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n\nimport { storeConnect, MapState, MapDispatch } from '@/store/index';\nimport WORDS, { Word } from '@/words';\n\nconst { Countdown } = Statistic;\n\nconst shuffle = (arr: any[]) => {\n    for (let i = arr.length - 1; i >= 0; i--) {\n        let rIndex = Math.floor(Math.random() * (i + 1));\n        let temp = arr[rIndex];\n        arr[rIndex] = arr[i];\n        arr[i] = temp;\n    }\n    return arr;\n};\nconst getWords = (mode: string, propWords: Word[]) => {\n    if (mode !== '1' && propWords && propWords.length !== 0) {\n        return propWords;\n    } else {\n        return WORDS;\n    }\n};\nconst getCountdownStr = (value: number) => {\n    const minutes = Math.floor(value / 60);\n    const secs = value % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n};\n\nconst Home: React.FC<MapState & MapDispatch> = (props) => {\n    const [loading, setLoading] = useState(true);\n    const [deadline, setDeadline] = useState(0);\n    const [actingWordIndex, setActingWordIndex] = useState(0);\n    const [wordArr, setWordArr] = useState<Array<Word & { isCorrect: boolean | null }>>([]);\n    const [wordInput, setWordInput] = useState('');\n    const [typingEnd, setTypingEnd] = useState(false);\n    const wordsBaseRef = useRef(\n        getWords(props.$state.root.wordsMode, props.$state.root.customerWords)\n    );\n    const mainWindowEl = useRef(null);\n    const mainInputEl = useRef(null);\n    const wordIndexRef = useRef(0); // WORDS数组的下标\n    const lineIndexLockRef = useRef(false); // 是否设置过第二行开头元素的下标\n    const nextLineStartIndexRef = useRef(0);\n    const lineCountRef = useRef(0);\n    const timeStartRef = useRef(false);\n    const oneLineHeightRef = useRef(53);\n    const keystrokeCountRef = useRef(0);\n    const countdownTimeRef = useRef(parseInt(props.$state.root.countdownTime, 10));\n    const [deadlineText, setDeadlineText] = useState(getCountdownStr(countdownTimeRef.current));\n\n    const countDownStart = () => {\n        const time = countdownTimeRef.current;\n        setDeadline(Date.now() + time * 1000);\n    };\n    const pushWordToArr = (isInit?: boolean) => {\n        setWordArr((arr) => {\n            const wordsTemp = [...wordsBaseRef.current];\n            if (isInit) {\n                wordIndexRef.current = 0;\n                return [{ isCorrect: null, ...wordsTemp[wordIndexRef.current] }];\n            } else {\n                wordIndexRef.current += 1;\n                if (wordIndexRef.current >= wordsTemp.length) wordIndexRef.current = 0;\n                return arr.concat({ isCorrect: null, ...wordsTemp[wordIndexRef.current] });\n            }\n        });\n    };\n    const checkInputVal = (inputArr: string[], target: string) => {\n        let isCorrect = true;\n        inputArr.forEach((char, index) => {\n            if (target.charAt(index) !== char) {\n                isCorrect = false;\n            }\n        });\n        return isCorrect;\n    };\n    const inputCountdownTime = (value?: number) => {\n        if (value && /^\\d+$/g.test(String(value))) {\n            countdownTimeRef.current = value;\n            setDeadlineText(getCountdownStr(value));\n        }\n    };\n    const onCountdonwFinish = () => {\n        if (timeStartRef.current) {\n            setTypingEnd(true);\n            console.log(wordArr);\n        }\n    };\n    const reloadBtn = useCallback(() => {\n        lineIndexLockRef.current = false;\n        lineCountRef.current = 0;\n        timeStartRef.current = false;\n        keystrokeCountRef.current = 0;\n        setTypingEnd(false);\n        setWordInput('');\n        setActingWordIndex(0);\n        wordsBaseRef.current = shuffle(wordsBaseRef.current);\n        pushWordToArr(true);\n        setTimeout(() => {\n            (mainInputEl.current as any).focus();\n        }, 10);\n    }, []);\n    const mainInputKeyUp = (evt: React.KeyboardEvent) => {\n        if (evt.keyCode === 13) reloadBtn();\n        if (typingEnd) return;\n        keystrokeCountRef.current += 1;\n    };\n\n    useEffect(() => {\n        if (mainWindowEl) {\n            const wordContainerRow = (mainWindowEl.current as any).lastElementChild;\n            if (!wordContainerRow || !wordContainerRow.lastElementChild) return;\n            const outterScrollTop = (mainWindowEl.current as any).scrollTop;\n            Array.from(wordContainerRow.children).forEach((child: any, index: number) => {\n                oneLineHeightRef.current = child.offsetHeight;\n                const childTopToParent = child.offsetTop - wordContainerRow.offsetTop;\n                const showsSecLine = oneLineHeightRef.current + outterScrollTop;\n                const isNextLineCheck = // 判断是不是显示的两行中的第二行，存在小数公差\n                    showsSecLine - 5 < childTopToParent && childTopToParent < showsSecLine + 5;\n                if (!lineIndexLockRef.current && isNextLineCheck) {\n                    nextLineStartIndexRef.current = index;\n                    lineIndexLockRef.current = true;\n                }\n            });\n            if (\n                wordContainerRow.lastElementChild.offsetTop -\n                    wordContainerRow.offsetTop -\n                    outterScrollTop <\n                oneLineHeightRef.current * 3 + 1\n            ) {\n                pushWordToArr();\n            }\n        }\n    }, [wordArr.length]);\n\n    useEffect(() => {\n        if (typingEnd) return;\n        if (wordInput === '') {\n            setWordArr((arr) => {\n                const tempArr = [...arr];\n                if (tempArr[actingWordIndex]) {\n                    tempArr[actingWordIndex].isCorrect = null;\n                }\n                return tempArr;\n            });\n            return;\n        }\n        if (!timeStartRef.current) countDownStart();\n        timeStartRef.current = true;\n        const inputArr = Array.from(wordInput.trim());\n        if (wordInput[wordInput.length - 1] === ' ') {\n            setWordInput('');\n            if (inputArr.length === 0) return;\n            setWordArr((arr) => {\n                let tempArr = [...arr];\n                const targetWord = tempArr[actingWordIndex];\n                const isCorrect = checkInputVal(inputArr, targetWord.text);\n                tempArr[actingWordIndex].isCorrect =\n                    isCorrect && inputArr.length === targetWord.text.length;\n                return tempArr;\n            });\n            setActingWordIndex(actingWordIndex + 1);\n            if (actingWordIndex + 1 === nextLineStartIndexRef.current) {\n                lineCountRef.current += 1;\n                (mainWindowEl.current as any).scrollTop =\n                    oneLineHeightRef.current * lineCountRef.current;\n                lineIndexLockRef.current = false;\n                pushWordToArr();\n            }\n        } else {\n            setWordArr((arr) => {\n                const tempArr = [...arr];\n                const targetWord = tempArr[actingWordIndex];\n                const isCorrect = checkInputVal(inputArr, targetWord.text);\n                tempArr[actingWordIndex].isCorrect = isCorrect === false ? false : null;\n                return tempArr;\n            });\n        }\n    }, [actingWordIndex, typingEnd, wordInput]);\n\n    useEffect(() => {\n        wordsBaseRef.current = getWords(\n            props.$state.root.wordsMode,\n            props.$state.root.customerWords\n        );\n        setTimeout(() => {\n            reloadBtn();\n            setLoading(false);\n        }, 1000);\n    }, [props.$state.root.wordsMode, props.$state.root.customerWords, reloadBtn]);\n\n    return (\n        <div className=\"home\">\n            <Row justify=\"center\" align=\"middle\">\n                <Col flex=\"450px\" className={`home-scale-box-${props.$state.root.uiScale}`}>\n                    <div className=\"home-show-main\">\n                        {typingEnd && <div className=\"type-end\"></div>}\n                        <Spin spinning={loading} delay={50} wrapperClassName=\"loading-wrapper\">\n                            <div className=\"home-show-main-window\" ref={mainWindowEl}>\n                                <Row gutter={12}>\n                                    {wordArr.map((item, index) => (\n                                        <Col\n                                            key={index}\n                                            className={`home-show-main-window-item ${\n                                                item.isCorrect === true ? 'correct' : ''\n                                            } ${item.isCorrect === false ? 'incorrect' : ''}`}\n                                        >\n                                            <div\n                                                className={`home-show-main-window--label ${\n                                                    actingWordIndex === index ? 'acting' : ''\n                                                }`}\n                                            >\n                                                {item.label}\n                                            </div>\n                                            <div className=\"home-show-main-window--text\">\n                                                {item.text}\n                                            </div>\n                                        </Col>\n                                    ))}\n                                </Row>\n                            </div>\n                        </Spin>\n                    </div>\n                    <Row justify=\"space-between\" align=\"middle\" gutter={0}>\n                        <Col flex=\"285px\">\n                            <Input\n                                className=\"home-input\"\n                                ref={mainInputEl}\n                                value={wordInput}\n                                onChange={(evt) => {\n                                    setWordInput(evt.target.value);\n                                }}\n                                onKeyUp={mainInputKeyUp}\n                            ></Input>\n                        </Col>\n                        <Col flex=\"90px\">\n                            <Popover\n                                content={\n                                    <div>\n                                        <InputNumber\n                                            defaultValue={countdownTimeRef.current}\n                                            onChange={inputCountdownTime}\n                                        ></InputNumber>\n                                        <span>秒</span>\n                                    </div>\n                                }\n                                onVisibleChange={() =>\n                                    props.$dispatch(\n                                        'setCountdownTime',\n                                        String(countdownTimeRef.current)\n                                    )\n                                }\n                                overlayClassName=\"home-countdown-popover\"\n                                placement=\"bottom\"\n                                title=\"\"\n                                trigger=\"click\"\n                            >\n                                <div className=\"home-countdown\">\n                                    <Countdown\n                                        className=\"home-countdown-main\"\n                                        value={deadline}\n                                        format=\"m:ss\"\n                                        onFinish={onCountdonwFinish}\n                                    ></Countdown>\n                                    <div\n                                        className={`home-countdown-placeholder ${\n                                            timeStartRef.current ? 'time-run' : ''\n                                        }`}\n                                    >\n                                        {deadlineText}\n                                    </div>\n                                </div>\n                            </Popover>\n                        </Col>\n                        <Col flex=\"50px\">\n                            <Button\n                                className=\"home-reload-btn\"\n                                onClick={reloadBtn}\n                                type=\"primary\"\n                                icon={<ReloadOutlined />}\n                            />\n                        </Col>\n                    </Row>\n                    {typingEnd && (\n                        <Row className=\"home-type-result\">\n                            <Col span={24}>\n                                <div className=\"result-wpm\">\n                                    {Math.round(\n                                        wordArr.filter((word) => word.isCorrect !== null).length /\n                                            (countdownTimeRef.current / 60)\n                                    )}\n                                    WPM\n                                </div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-title\">正确</div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-numbers correct\">\n                                    {wordArr.filter((word) => word.isCorrect === true).length}\n                                </div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-title\">错误</div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-numbers wrong\">\n                                    {wordArr.filter((word) => word.isCorrect === false).length}\n                                </div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-title\">按键总数</div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"result-numbers\">{keystrokeCountRef.current}</div>\n                            </Col>\n                        </Row>\n                    )}\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default storeConnect(Home);\n","// import { lazy } from 'react';\nimport { RouteProps } from 'react-router-dom';\nimport Home from '@/views/home/Home';\n\nconst routes: Array<RouteProps & { children?: Array<RouteProps> }> = [\n    {\n        path: '/',\n        component: Home,\n        // component: lazy(() => import('@/views/home/Home')),\n        exact: true,\n    },\n    // {\n    //     path: '/about/:name',\n    //     component: lazy(() => import('@/views/about/About')),\n    //     exact: true,\n    // },\n    // {\n    //     path: '/dashboard',\n    //     component: lazy(() => import('@/views/dashboard/Dashboard')),\n    //     // exact: true,\n    //     children: [\n    //         {\n    //             path: '/graph/:id',\n    //             component: lazy(() => import('@/views/dashboard/graph/DashboardGraph')),\n    //             exact: true,\n    //         },\n    //         {\n    //             path: '/list',\n    //             component: lazy(() => import('@/views/dashboard/list/DashboardList')),\n    //             exact: true,\n    //         },\n    //     ],\n    // },\n];\n\nexport default routes;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport routes from './routes';\n\ninterface Props {\n    mainClass: string;\n    header: React.ReactNode;\n    footer: React.ReactNode;\n}\n\nconst router: React.FC<Props> = (routeProps) => (\n    <Router basename={process.env.REACT_APP_DOMAIN}>\n        {routeProps.header}\n        <div className={routeProps.mainClass}>\n            <Suspense fallback={<div></div>}>\n                <Switch>\n                    {routes.map((route, i) => (\n                        <Route\n                            path={route.path}\n                            exact={route.exact && !route.children}\n                            key={i}\n                            render={(props) => (\n                                <div>\n                                    {route.component\n                                        ? React.createElement(route.component, props)\n                                        : ''}\n                                    {route.children && route.children.length > 0 && (\n                                        <Suspense fallback={<div></div>}>\n                                            <Switch>\n                                                {route.children.map((child, j) => (\n                                                    <Route\n                                                        path={props.match.url + child.path}\n                                                        exact={child.exact}\n                                                        key={j}\n                                                        component={child.component}\n                                                    />\n                                                ))}\n                                            </Switch>\n                                        </Suspense>\n                                    )}\n                                </div>\n                            )}\n                        />\n                    ))}\n                </Switch>\n            </Suspense>\n        </div>\n        {routeProps.footer}\n    </Router>\n);\n\nexport default router;\n","const pinyin = require('chinese-to-pinyin');\n\nexport function getPinyin(word: string) {\n    return pinyin(word, { removeSpace: true, removeTone: true });\n}\n","export default {\n    name: 'default',\n    textColor: '#fffffe',\n    '@primary-color': '#1890ff',\n    '@link-color': '#1890ff',\n    '@success-color': '#52c41a',\n    '@error-color': '#f5222d',\n    '@body-back-color': '#282c34',\n    '@text-color-bright': '#fffffe',\n    '@home-window-back-color': '#fffffd',\n    '@home-window-text-color': '#141414',\n    '@home-window-text-sub-color': 'inherit',\n    '@home-window-text-acting-back-color': 'rgba(0, 0, 0, 0.26)',\n    '@success-opacity': 'inherit',\n    '@home-el-focus-color': 'rgba(224, 237, 249, 0.21)',\n    '@home-countdown-back-color': '#666666',\n    '@reload-btn-color': '#fffffe',\n} as any;\n","import less from 'less';\nimport def from './default';\nimport carbon from './carbon';\nimport olivia from './olivia';\nimport t9009 from './9009';\nimport oblivion from './oblivion';\nimport godspeed from './godspeed';\nimport nautilus from './nautilus';\n// import yellowLine from './yellowLine';\nimport avocado from './avocado';\nimport t2600 from './2600';\nimport konmomo from './konmomo';\n\nexport const changeColor = (themeObj: any) => {\n    const temp = { ...themeObj };\n    delete temp.name;\n    delete temp.textColor;\n    // less.options.async = true;\n    // less.modifyVars(Object.assign({}, def, temp));\n    less.refresh().then(() => {\n        less.modifyVars(Object.assign({}, def, temp));\n    });\n};\n\nexport default [\n    { ...def },\n    { ...carbon },\n    { ...olivia },\n    { ...t9009 },\n    { ...oblivion },\n    { ...godspeed },\n    { ...nautilus },\n    // { ...yellowLine },\n    { ...avocado },\n    { ...t2600 },\n    { ...konmomo },\n];\n","export default {\n    name: 'carbon',\n    '@primary-color': '#ed6b21',\n    '@body-back-color': '#575d5e',\n    '@text-color-bright': '#e3d9c6',\n    '@home-window-back-color': '#e3d9c6',\n    '@home-window-text-color': '#575d5e',\n    '@reload-btn-color': '#e3d9c6',\n} as any;\n","export default {\n    name: 'olivia',\n    '@primary-color': '#e8c4b8',\n    '@link-color': '#e8c4b8',\n    '@body-back-color': '#363434',\n    '@text-color-bright': '#e8c4b8',\n    '@home-window-back-color': '#fafafa',\n    '@home-window-text-color': '#363434',\n    '@home-window-text-acting-back-color': 'rgba(102, 102, 102, 0.26)',\n    '@reload-btn-color': '#fafafa',\n} as any;\n","export default {\n    name: '9009',\n    textColor: '#2e2f33',\n    '@primary-color': '#6f8c70',\n    '@link-color': '#6f8c70',\n    '@success-color': '#6f8c70',\n    '@error-color': '#ec8f88',\n    '@body-back-color': '#b6b09a',\n    '@text-color-bright': '#2e2f33',\n    '@home-window-back-color': '#d9d2c8',\n    '@home-window-text-color': '#2e2f33',\n    '@home-countdown-back-color': '#d9d2c8',\n    '@reload-btn-color': '#d9d2c8',\n} as any;\n","export default {\n    name: 'oblivion',\n    '@primary-color': '#ffac00',\n    '@link-color': '#ffac00',\n    '@success-color': '#93c247',\n    '@error-color': '#ea4221',\n    '@body-back-color': '#464746',\n    '@text-color-bright': '#c8c3b8',\n    '@home-window-back-color': '#63696a',\n    '@home-window-text-color': '#c8c3b8',\n    '@home-countdown-back-color': '#6f7778',\n} as any;\n","export default {\n    name: 'godspeed',\n    textColor: '#faee69',\n    '@primary-color': '#faee69',\n    '@link-color': '#faee69',\n    '@body-back-color': '#6A97B5',\n    '@text-color-bright': '#e5e8e6',\n    '@home-window-back-color': '#eae3d5',\n    '@home-window-text-color': '#575d5e',\n    '@home-countdown-back-color': '#5A5E61',\n    '@reload-btn-color': '#575d5e',\n} as any;\n","export default {\n    name: 'nautilus',\n    textColor: '#eac004',\n    '@primary-color': '#eac004',\n    '@link-color': '#eac004',\n    '@body-back-color': '#102c4e',\n    '@text-color-bright': '#eac004',\n    '@home-window-back-color': '#155d94',\n    '@home-window-text-color': '#1ae7ea',\n    '@home-countdown-back-color': '#155d94',\n    '@reload-btn-color': '#102c4e',\n} as any;\n","export default {\n    name: 'avocado',\n    textColor: 'rgb(239,234,155)',\n    '@primary-color': 'rgb(52,31,35)',\n    '@link-color': 'rgb(52,31,35)',\n    '@success-color': 'inherit',\n    '@body-back-color': 'rgb(101,145,91)',\n    '@text-color-bright': 'rgb(239,234,155)',\n    '@home-window-back-color': 'rgb(239,234,155)',\n    '@home-window-text-color': 'rgb(101,145,91)',\n    '@success-opacity': '.6',\n    '@home-countdown-back-color': 'rgb(52,31,35)',\n    '@reload-btn-color': 'rgb(239,234,155)',\n} as any;\n","export default {\n    name: '2600',\n    '@primary-color': '#f8cc2a',\n    '@link-color': '#f8cc2a',\n    '@success-color': 'inherit',\n    '@error-color': '#6c3b7b',\n    '@body-back-color': '#6c3b7b',\n    '@home-window-back-color': '#1a8ab7',\n    '@home-window-text-color': '#f8cc2a',\n    '@success-opacity': '.3',\n    '@home-countdown-back-color': '#f8cc2a',\n} as any;\n","export default {\n    name: 'konmomo',\n    textColor: 'rgb(244,84,124)',\n    '@primary-color': 'rgb(43,38,91)',\n    '@link-color': 'rgb(43,38,91)',\n    '@success-color': 'inherit',\n    '@body-back-color': '#f7f2ea',\n    '@text-color-bright': 'rgb(244,84,124)',\n    '@home-window-text-color': 'rgb(43,38,91)',\n    '@home-window-text-sub-color': 'rgb(244,84,124)',\n    '@success-opacity': '.3',\n    '@home-countdown-back-color': 'rgb(43,38,91)',\n    '@reload-btn-color': '#f7f2ea',\n} as any;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Row, Col, Button, Radio, Modal, Tabs, Input, Tooltip } from 'antd';\nimport { SettingOutlined, AppstoreOutlined } from '@ant-design/icons';\nimport { useLocation } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\nimport { storeConnect, MapState, MapDispatch } from '@/store/index';\nimport WORDS from '@/words';\nimport { getPinyin } from '@/utils/pinyin';\n\nimport themeList, { changeColor } from '@/themes';\n\nconst reg = /^[\\u2E80-\\u9FFF]+$/;\nconst defaultWordStr = WORDS.map((item) => item.label).join('|');\n\nconst Header: React.FC<MapState & MapDispatch> = (props) => {\n    const [settingModalVisible, setSettingModalVisible] = useState(false);\n    const [themeModalVisible, setThemeModalVisible] = useState(false);\n    const [wordsMode, setWordsMode] = useState(props.$state.root.wordsMode);\n    const defaultWordsRef = useRef(defaultWordStr);\n    const [words, setWords] = useState(\n        props.$state.root.customerWords && props.$state.root.customerWords.length !== 0\n            ? props.$state.root.customerWords.map((item) => item.label).join('|')\n            : defaultWordStr\n    );\n    const [errorWordList, setErrorWordList] = useState<string[]>([]);\n\n    const { hash } = useLocation();\n\n    const onUiSizeChange = (evt: any) => {\n        props.$dispatch('setUiScale', evt.target.value);\n    };\n    const handleModalOk = () => {\n        if (wordsMode === '1') {\n            props.$dispatch('setWordsMode', wordsMode);\n            setSettingModalVisible(false);\n            return;\n        }\n        const inputWordList = Array.from(new Set(words.split('|').filter(Boolean)));\n        const errorList: string[] = [];\n        if (inputWordList.length === 0) errorList.push('请输入字词，并以符号|间隔');\n        inputWordList.forEach((word) => {\n            if (!reg.test(word)) errorList.push(word);\n        });\n        setErrorWordList(errorList);\n        if (errorList.length === 0) {\n            props.$dispatch('setWordsMode', wordsMode);\n            setWords(inputWordList.join('|'));\n            console.time('getPinyin');\n            const actWordList = inputWordList.map((word) => ({\n                label: word,\n                text: getPinyin(word),\n            }));\n            console.timeEnd('getPinyin');\n\n            props.$dispatch('saveCustomerWords', actWordList);\n            setSettingModalVisible(false);\n        }\n    };\n    const onTabsChange = (activeKey: string) => {\n        setWordsMode(activeKey);\n        setErrorWordList([]);\n    };\n    const onTextInput = (evt: any) => {\n        setWords(evt.target.value);\n    };\n    const themeBlockClick = (theme: any) => {\n        window.location.hash = '';\n        props.$dispatch('setUiTheme', theme.name);\n    };\n\n    useEffect(() => {\n        if (hash) {\n            const themeObj = themeList.find((th) => th.name === hash.slice(1).replace('-', ' '));\n            if (themeObj) {\n                changeColor(themeObj);\n            }\n        } else if (props.$state.root.uiTheme) {\n            const themeObj = themeList.find((th) => th.name === props.$state.root.uiTheme);\n            if (themeObj) {\n                changeColor(themeObj);\n            }\n        }\n    }, [hash, props.$state.root.uiTheme]);\n\n    return (\n        <div className=\"app-header\">\n            <Row>\n                <Col flex=\"auto\">\n                    <Button\n                        type=\"link\"\n                        ghost\n                        icon={<SettingOutlined />}\n                        onClick={() => setSettingModalVisible(true)}\n                    >\n                        词组设置\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        ghost\n                        icon={<AppstoreOutlined />}\n                        onClick={() => setThemeModalVisible(true)}\n                    >\n                        主题\n                    </Button>\n                    <span className=\"radio-text\">&nbsp;&nbsp;&nbsp;&nbsp;UI尺寸:&nbsp;&nbsp;</span>\n                    <Radio.Group onChange={onUiSizeChange} defaultValue={props.$state.root.uiScale}>\n                        <Radio value=\"s\">正常</Radio>\n                        <Radio value=\"m\">大</Radio>\n                        <Radio value=\"l\">特大</Radio>\n                    </Radio.Group>\n                </Col>\n            </Row>\n            <Modal\n                className=\"header-modal-setting\"\n                title=\"\"\n                visible={settingModalVisible}\n                closable={false}\n                maskClosable={false}\n                footer={\n                    <Tooltip placement=\"left\" title=\"将自动去除重复词组\">\n                        <Button\n                            className=\"header-modal-confirm-btn\"\n                            type=\"primary\"\n                            onClick={handleModalOk}\n                        >\n                            确定\n                        </Button>\n                    </Tooltip>\n                }\n            >\n                <Tabs defaultActiveKey={wordsMode} onChange={onTabsChange}>\n                    <Tabs.TabPane tab=\"默认词组\" key=\"1\">\n                        <Input.TextArea\n                            autoSize={{ minRows: 9, maxRows: 16 }}\n                            disabled\n                            defaultValue={defaultWordsRef.current}\n                        />\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"自定义词组\" key=\"2\">\n                        <Input.TextArea\n                            autoSize={{ minRows: 9, maxRows: 16 }}\n                            value={words}\n                            onChange={onTextInput}\n                        />\n                    </Tabs.TabPane>\n                </Tabs>\n                <Row className=\"header-modal--words-length\">\n                    <Col span={12}>\n                        <Row gutter={6} className=\"error-word\">\n                            {errorWordList.map((err, index) => (\n                                <Col key={index}>{err}</Col>\n                            ))}\n                        </Row>\n                    </Col>\n                    <Col span={12} className=\"header-modal--total\">\n                        共(\n                        {wordsMode === '1'\n                            ? defaultWordsRef.current.split('|').length\n                            : words.split('|').filter(Boolean).length}\n                        )个词\n                    </Col>\n                </Row>\n            </Modal>\n            <Modal\n                className=\"header-modal-theme\"\n                title=\"\"\n                visible={themeModalVisible}\n                footer=\"\"\n                onCancel={() => setThemeModalVisible(false)}\n            >\n                <Row justify=\"space-around\" className=\"header-modal-theme--box\">\n                    {themeList.map((theme, index) => (\n                        <Col\n                            flex=\"100px\"\n                            className=\"theme-display-block\"\n                            key={index}\n                            style={{\n                                backgroundColor: theme['@body-back-color'],\n                                color: theme.textColor || theme['@primary-color'],\n                            }}\n                            onClick={() => themeBlockClick(theme)}\n                        >\n                            {theme.name}\n                        </Col>\n                    ))}\n                    <Col flex=\"100px\"></Col>\n                    <Col flex=\"100px\"></Col>\n                    <Col flex=\"100px\"></Col>\n                    <Col flex=\"100px\"></Col>\n                </Row>\n            </Modal>\n            {/* <div>router examples.(with code split lazy load, check js files in network)</div>\n            <ul>\n                <li>\n                    <Link to=\"/\">/home</Link>\n                </li>\n                <li>\n                    <Link to=\"/about/urlValue\">/about/urlValue</Link>\n                </li>\n                <li>\n                    <Link to=\"/dashboard\">/dashboard</Link>\n                </li>\n                <li>\n                    <Link to=\"/dashboard/graph/123\">/dashboard/graph/123</Link>\n                </li>\n                <li>\n                    <Link to=\"/dashboard/list\">/dashboard/list</Link>\n                </li>\n            </ul> */}\n        </div>\n    );\n};\n\nexport default storeConnect(Header);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n// import 'antd/dist/antd.css';\nimport './App.less';\nimport AppRouter from './router';\nimport store from './store';\n\nimport Header from './components/header/Header';\n// import Footer from './components/footer/Footer';\n\nconst App: React.FC = () => (\n    <Provider store={store}>\n        <AppRouter mainClass={'app-main'} header={<Header />} footer={<div />} />\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}